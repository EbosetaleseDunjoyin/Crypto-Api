{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple crypto store api.",
    "version": "1.0.0",
    "title": "Crypto API",
    "contact": {
      "email": "eboselese@gmail.com"
    }
  },
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "auth",
      "description": "Authenticate users and get user data."
    },
    {
      "name": "crypto",
      "description": "Authenticate users and get user data."
    }
   
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/userLogin":{
        "post":{
            "tags":[
                "auth"
            ],
            "summary": "Logs user into the system and retrives token",
            "description": "",
            "operationId": "login",
            "produces": [
                "application/json"
            ],
            "parameters": [
                {
                "in": "body",
                "name": "body",
                "description": "Login credentials",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                    "username": {
                        "type": "string",
                        "description": "The username for login (email or phone number)"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for login in clear text"
                    }
                    }
                }
                }
            ],
            "responses": {
                "200": {
                    "description": "successful operation",
                    "schema": {
                        "$ref": "#/definitions/AuthResponse"
                    }
                },
                "400":{
                    "description": "unsuccessful operation",
                    "schema": {
                        "$ref" : "#/definitions/FailedResponse"
                    }
                    
                    
                },
                "422":{
                    "description": "unsuccessful operation",
                    "schema": {
                       "$ref" : "#/definitions/ValidationResponse"
                    }
                       
                    
                },
                "501":{
                    "description": "server error",
                    "schema": {
                       "$ref" : "#/definitions/FailedResponse"
                    }
                       
                    
                }
            }
                
            
        }

    },
    "/userRegister":{
        "post":{
            "tags":[
                "auth"
            ],
            "summary": "Register user into the system",
            "description": "",
            "operationId": "register",
            "produces": [
                "application/json"
            ],
            "parameters": [
                {
                "in": "body",
                "name": "body",
                "description": "Registration credentials",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                    "name": {
                        "type": "string",
                        "description": "The users name"
                    },
                    "email": {
                        "type": "string",
                        "description": "The email address"
                    },
                    "phone_no": {
                        "type": "integer",
                        "description": "The phone number"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password for login in clear text"
                    }
                    }
                }
                }
            ],
            "responses": {
                "200": {
                    "description": "successful operation",
                    "schema": {
                        "$ref": "#/definitions/AuthResponse"
                    }
                },
                "400":{
                    "description": "unsuccessful operation",
                    "schema": {
                        "$ref" : "#/definitions/FailedResponse"
                    }
                    
                    
                },
                "422":{
                    "description": "unsuccessful operation",
                    "schema": {
                       "$ref" : "#/definitions/ValidationResponse"
                    }
                       
                    
                },
                "501":{
                    "description": "server error",
                    "schema": {
                       "$ref" : "#/definitions/FailedResponse"
                    }
                       
                    
                }
            }
                
            
        }

    },
   "/user/{user}": {
        "get": {
            "tags": [
                "auth"
            ],
            "summary": "Get user from the system",
            "description": "",
            "operationId": "get_user",
            "produces": [
                "application/json"
            ],
            "parameters": [
                {
                    "in": "path",
                    "name": "user",
                    "description": "The user's id",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Successful operation",
                    "schema": {
                        "$ref": "#/definitions/AuthResponse"
                    }
                },
                "400": {
                    "description": "Bad request",
                    "schema": {
                        "$ref": "#/definitions/FailedResponse"
                    }
                },
                "422": {
                    "description": "Validation error",
                    "schema": {
                        "$ref": "#/definitions/ValidationResponse"
                    }
                },
                "501": {
                    "description": "Server error",
                    "schema": {
                        "$ref": "#/definitions/FailedResponse"
                    }
                }
            },
            "security": [
              { "api_token": [] }
            ]
        }
    },
    "/logout":{
        "post":{
            "tags":[
                "auth"
            ],
            "summary": "Logout user into the system",
            "description": "",
            "operationId": "logout",
            "produces": [
                "application/json"
            ],
            "responses": {
                "200": {
                    "description": "successful operation",
                    "schema": {
                        "$ref": "#/definitions/AuthResponse"
                    }
                },
                "400":{
                    "description": "unsuccessful operation",
                    "schema": {
                        "$ref" : "#/definitions/FailedResponse"
                    }
                    
                    
                },
               
                "501":{
                    "description": "server error",
                    "schema": {
                       "$ref" : "#/definitions/FailedResponse"
                    }
                       
                    
                }
            },
           "security": [
              { "api_token": [] }
            ]
                
            
        }

    },
    "/coins/transfer":{
        "post":{
            "tags":[
                "crypto"
            ],
            "summary": "Transfer coins from one user to another user",
            "description": "",
            "operationId": "send_crypto_coin",
            "produces": [
                "application/json"
            ],
            "parameters": [
                {
                "in": "body",
                "name": "body",
                "description": "Transfer details needed",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                      "user_email": {
                          "type": "string",
                          "description": "The senders email"
                      },
                      "reciever_email": {
                          "type": "string",
                          "description": "The recievers email address"
                      },
                      "coin_id": {
                          "type": "string",
                          "description": "The coin that is being transfered"
                      },
                      "amount": {
                          "type": "integer",
                          "description": "The amount to be sent it cant be less then 1 USD"
                      }
                    }
                }
                }
            ],
            "responses": {
                "200": {
                    "description": "successful operation",
                    "schema": {
                        "$ref": "#/definitions/AuthResponse"
                    }
                },
                "400":{
                    "description": "unsuccessful operation",
                    "schema": {
                        "$ref" : "#/definitions/FailedResponse"
                    }
                    
                    
                },
                "422":{
                    "description": "unsuccessful operation",
                    "schema": {
                       "$ref" : "#/definitions/ValidationResponse"
                    }
                       
                    
                },
                "501":{
                    "description": "server error",
                    "schema": {
                       "$ref" : "#/definitions/FailedResponse"
                    }
                       
                    
                }
            },
           "security": [
              { "api_token": [] }
            ]
            
        }

    },
    "/coins/swap":{
        "post":{
            "tags":[
                "crypto"
            ],
            "summary": "Swap coins from coin to another",
            "description": "",
            "operationId": "swap_crypto_coin",
            "produces": [
                "application/json"
            ],
            "parameters": [
                {
                "in": "body",
                "name": "body",
                "description": "Transfer details needed",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                      "email": {
                          "type": "string",
                          "description": "The senders email"
                      },
                      "coin_id": {
                        "type": "string",
                        "description": "The coin that is being swapped from"
                      },
                      "reciever_coin_id": {
                          "type": "string",
                          "description": "The coin id that is being swapped to"
                      },
                      "amount": {
                          "type": "integer",
                          "description": "The amount to be sent it cant be less then 1 USD"
                      }
                    }
                }
                }
            ],
            "responses": {
                "200": {
                    "description": "successful operation",
                    "schema": {
                        "$ref": "#/definitions/AuthResponse"
                    }
                },
                "400":{
                    "description": "unsuccessful operation",
                    "schema": {
                        "$ref" : "#/definitions/FailedResponse"
                    }
                    
                    
                },
                "422":{
                    "description": "unsuccessful operation",
                    "schema": {
                       "$ref" : "#/definitions/ValidationResponse"
                    }
                       
                    
                },
                "501":{
                    "description": "server error",
                    "schema": {
                       "$ref" : "#/definitions/FailedResponse"
                    }
                       
                    
                }
            },
            "security": [
              { "api_token": [] }
            ]
            
        }

    },
    "/coins/cryptoAccount/create":{
        "post":{
            "tags":[
                "crypto"
            ],
            "summary": "Create Crypto Acount for a particular user",
            "description": "",
            "operationId": "create_crypto_account",
            "produces": [
                "application/json"
            ],
            "parameters": [
                {
                "in": "body",
                "name": "body",
                "description": "Transfer details needed",
                "required": true,
                "schema": {
                    "type": "object",
                    "properties": {
                      "email": {
                          "type": "string",
                          "description": "The senders email"
                      },
                      "coin_id": {
                        "type": "string",
                        "description": "The coin that is being swapped from"
                      }
                    }
                }
                }
            ],
            "responses": {
                "200": {
                    "description": "successful operation",
                    "schema": {
                        "$ref": "#/definitions/AuthResponse"
                    }
                },
                "400":{
                    "description": "unsuccessful operation",
                    "schema": {
                        "$ref" : "#/definitions/FailedResponse"
                    }
                    
                    
                },
                "422":{
                    "description": "unsuccessful operation",
                    "schema": {
                       "$ref" : "#/definitions/ValidationResponse"
                    }
                       
                    
                },
                "501":{
                    "description": "server error",
                    "schema": {
                       "$ref" : "#/definitions/FailedResponse"
                    }
                       
                    
                }
            },
            "security": [
              { "api_token": [] }
            ]
            
        }

    }
    

    
  },
  "securityDefinitions": {
    "api_token": {
      "type": "http",
      "scheme": "bearer",
      "name": "Authorization",
      "in": "header"
    }
   
  },
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "default": true
          
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ValidationResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "errors": {
          "type": "array"
        }
      }
    },
    "FailedResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "AuthResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
          
        },
        "message": {
          "type": "string"
        },
        "token":{
            "type":"string"
        },
        "user":{
          "type":"object"
        }
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "Pet": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "example": "doggie"
        },
        "photoUrls": {
          "type": "array",
          "xml": {
            "wrapped": true
          },
          "items": {
            "type": "string",
            "xml": {
              "name": "photoUrl"
            }
          }
        },
        "tags": {
          "type": "array",
          "xml": {
            "wrapped": true
          },
          "items": {
            "xml": {
              "name": "tag"
            },
            "$ref": "#/definitions/Tag"
          }
        },
        "status": {
          "type": "string",
          "description": "pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        }
      },
      "xml": {
        "name": "Pet"
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "xml": {
        "name": "Tag"
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean"
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "type": "integer",
          "format": "int32",
          "description": "User Status"
        }
      },
      "xml": {
        "name": "User"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
